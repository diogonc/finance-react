{"version":3,"sources":["shared/utils.js","screens/navigation/listItems.js","screens/navigation/index.js","redux/actions/navigationActions.js","redux/actions/actionTypes.js","screens/group/listGroup.js","screens/group/editGroup.js","redux/actions/groupActions.js","App.js","serviceWorker.js","redux/reducers/productReducers.js","redux/reducers/groupReducers.js","redux/reducers/navigationReducers.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["goTo","props","url","history","push","withRouter","ListItem","button","onClick","ListItemIcon","ListItemText","primary","handleAccountOpionsClose","updateNavigationState","isMenuExpanded","anchorEl","handleNavigationMenuClose","toogleNavigation","connect","state","navigation","dispatch","type","actions","withStyles","theme","toolbar","paddingRight","toolbarIcon","display","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","menuButton","marginLeft","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","spacing","unit","breakpoints","up","useState","navigationState","classes","renderMenu","Menu","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","MenuItem","AppBar","className","Toolbar","IconButton","color","aria-label","handleNavigationMenuOpen","classNames","Typography","variant","noWrap","aria-owns","undefined","aria-haspopup","event","currentTarget","handleAccountOptionsOpen","Drawer","paper","Divider","List","items","group","root","table","minWidth","tableRow","cursor","fab","down","bottom","right","margin","float","Fab","gutterBottom","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","item","key","uuid","scope","name","priority","categoryType","submitForm","newItem","updateGroup","preventDefault","update","add","toastr","success","deleteGroup","form","maxWidth","marginTop","parseInt","match","params","itemFound","find","optionalButton","Button","size","deleteGroupAction","onSubmit","value","FormControl","required","fullWidth","InputLabel","htmlFor","Input","id","autoFocus","onChange","target","step","Select","inputProps","goToList","styles","content","height","overflow","appBarSpacer","CssBaseline","MainContainer","join","path","EditGroup","exact","render","window","location","hostname","initialState","products","price","description","creationDate","Date","getMaxIdFromState","length","Math","max","apply","p","addProduct","action","product","updateProduct","deleteProduct","filter","reducer","getTime","deleteItem","innerWidth","combineReducers","createStore","rootReducer","options","hideDuration","timeOut","positionClass","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45707389.chunk.js","sourcesContent":["export const goTo = (props, url) => {\n    props.history.push('/' + url);\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SpeakerGroup from '@material-ui/icons/SpeakerGroup';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport { goTo } from '../../shared/utils';\n\nconst ListItems = (props) => (\n    <div>\n        <ListItem button onClick={() => goTo(props, 'groups')}>\n            <ListItemIcon>\n                <SpeakerGroup />\n            </ListItemIcon>\n            <ListItemText primary=\"Agrupamentos\" />\n        </ListItem>\n        <ListItem button onClick={() => goTo(props, 'relatorios')}>\n            <ListItemIcon>\n                <BarChartIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Relatórios\" />\n        </ListItem>\n    </div>\n);\n\nexport default withRouter(ListItems);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItems from './listItems';\nimport * as actions from '../../redux/actions/navigationActions';\n\nconst drawerWidth = 190;\n\nconst styles = theme => ({\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  menuButton: {\n    marginLeft: 10,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n});\n\nconst mapStateToProps = state => {\n  return { ...state.navigation };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toogleNavigation: isMenuExpanded => dispatch(actions.toogleMenu(isMenuExpanded))\n  };\n};\n\nconst handleAccountOptionsOpen = (event, updateNavigationState, isMenuExpanded) => {\n  updateNavigationState({ anchorEl: event.currentTarget, isMenuExpanded });\n};\n\nconst handleAccountOpionsClose = (updateNavigationState, isMenuExpanded) => {\n  updateNavigationState({ anchorEl: null, isMenuExpanded });\n};\n\nconst handleNavigationMenuOpen = (props, updateNavigationState) => {\n  updateNavigationState({ isMenuExpanded: true });\n  props.toogleNavigation(true);\n};\n\nconst handleNavigationMenuClose = (props, updateNavigationState) => {\n  updateNavigationState({ isMenuExpanded: false });\n  props.toogleNavigation(false);\n};\n\nconst Navigation = props => {\n  const [navigationState, updateNavigationState] = useState({\n    anchorEl: props.anchorEl,\n    isMenuExpanded: props.isMenuExpanded\n  });\n  if (navigationState.isMenuExpanded !== props.isMenuExpanded) {\n    updateNavigationState({ isMenuExpanded: props.isMenuExpanded, anchorEl: props.anchorEl });\n  }\n\n  const { anchorEl, isMenuExpanded } = navigationState;\n  const { classes } = props;\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={Boolean(anchorEl)}\n      onClose={() => handleAccountOpionsClose(updateNavigationState, props.isMenuExpanded)}\n    >\n      <MenuItem onClick={() => handleAccountOpionsClose(updateNavigationState, props.isMenuExpanded)}>Minha conta</MenuItem>\n      <MenuItem onClick={() => handleAccountOpionsClose(updateNavigationState, props.isMenuExpanded)}>Sair</MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar\n        position=\"absolute\"\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={() => handleNavigationMenuOpen(props, updateNavigationState)}\n            className={classNames(\n              classes.menuButton,\n              isMenuExpanded && classes.menuButtonHidden,\n            )}\n          >  <MenuIcon />\n          </IconButton>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Close drawer\"\n            onClick={() => handleNavigationMenuClose(props, updateNavigationState)}\n            className={classNames(\n              classes.menuButton,\n              !isMenuExpanded && classes.menuButtonHidden,\n            )}\n          >\n            <ChevronLeftIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            Financeiro\n            </Typography>\n          <IconButton\n            aria-owns={isMenuExpanded ? 'material-appbar' : undefined}\n            aria-haspopup=\"true\"\n            onClick={(event) => handleAccountOptionsOpen(event, updateNavigationState, props.isMenuExpanded)}\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n\n        </Toolbar>\n      </AppBar>\n      {renderMenu}\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: classNames(classes.drawerPaper, !navigationState.isMenuExpanded && classes.drawerPaperClose),\n        }}\n        open={isMenuExpanded}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={() => handleNavigationMenuClose(props, updateNavigationState)}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItems />\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Navigation));","import * as actionTypes from './actionTypes';\n\nexport const toogleMenu = isMenuExpanded => {\n  return {\n    type: actionTypes.TOOGLE_MENU,\n    isMenuExpanded: isMenuExpanded\n  };\n};","export const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const TOOGLE_MENU = 'TOOGLE_MENU';\n","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { goTo } from '../../shared/utils';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  fab: {\n    [theme.breakpoints.down('sm')]: {\n      position: 'absolute',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n    [theme.breakpoints.up('sm')]: {\n      margin: theme.spacing.unit * 2,\n      float: 'right'\n    }\n  },\n});\n\nconst mapStateToProps = state => {\n  return {\n    items: state.group.items\n  };\n};\n\n\nfunction SimpleTable(props) {\n  const { classes } = props;\n\n  return (\n    <>\n      <Fab color=\"primary\" aria-label=\"Add\"\n        className={classes.fab}\n        onClick={() => goTo(props, 'groups/new')}>\n        <AddIcon />\n      </Fab>\n      <Typography variant=\"h4\" gutterBottom component=\"h2\">\n        Agrupamentos\n      </Typography>\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Nome</TableCell>\n              <TableCell align=\"right\">Prioridade</TableCell>\n              <TableCell align=\"right\">Tipo</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.items.map(item => (\n              <TableRow className={classes.tableRow} key={item.uuid} onClick={() => goTo(props, `groups/edit/${item.uuid}`)}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {item.name}\n                </TableCell>\n                <TableCell align=\"right\">{item.priority}</TableCell>\n                <TableCell align=\"right\">{item.categoryType}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </>\n  );\n}\n\nexport default connect(mapStateToProps)(withRouter(withStyles(styles)(SimpleTable)));","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport toastr from 'toastr'\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport * as actions from '../../redux/actions/groupActions';\n\nconst mapStateToProps = state => {\n  return {\n    items: state.group.items\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    update: item => dispatch(actions.updateGroup(item)),\n    add: item => dispatch(actions.addGroup(item)),\n    deleteGroup: uuid => dispatch(actions.deleteGroup(uuid))\n  };\n};\n\nconst styles = theme => ({\n  form: {\n    maxWidth: '350px',\n    marginTop: theme.spacing.unit,\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit,\n  },\n});\n\nconst submitForm = (event, props, group, newItem, updateGroup) => {\n  event.preventDefault();\n  if (group.uuid) {\n    props.update(group);\n  } else {\n    props.add(group);\n  }\n  toastr.success(`Group saved!!`)\n\n  if (!newItem)\n    props.history.push('/groups');\n  else {\n    updateGroup({ uuid: 0, priority: 1, name: '', categoryType: 1 })\n  }\n};\n\nconst deleteGroupAction = (props, uuid) => {\n  props.deleteGroup(uuid);\n  toastr.success(`Group deleted!!`)\n  props.history.push('/groups');\n};\n\nconst goToList = (props) => {\n  props.history.push('/groups');\n};\n\nconst EditGroup = props => {\n  const { classes } = props;\n  let item = { uuid: 0, priority: 1, name: '', categoryType: 2 };\n  let uuid = parseInt(props.match.params.uuid);\n  if (uuid) {\n    const itemFound = props.items.find(item => item.uuid === uuid);\n    if (itemFound) {\n      item = itemFound;\n    }\n    else {\n      uuid = null;\n    }\n  }\n  const [group, updateGroup] = useState({ ...item });\n  if (item.uuid !== group.uuid) {\n    updateGroup({ ...item });\n  }\n\n  const optionalButton = item.uuid && item.uuid !== 0 ?\n    (\n      <Button\n        type=\"button\"\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"small\"\n        className={classes.button}\n        onClick={event => deleteGroupAction(props, group.uuid)}\n      >\n        Excluir\n    </Button>)\n    :\n    (\n      <Button\n        type=\"button\"\n        variant=\"contained\"\n        size=\"small\"\n        className={classes.button}\n        onClick={event => submitForm(event, props, group, true, updateGroup)}\n      >\n        Salvar e novo\n          </Button>\n    );\n\n\n  return (\n    <>\n      <div>text</div>\n      <Typography component=\"h1\" variant=\"h5\">\n        Agrupamento\n        </Typography>\n      <form className={classes.form} onSubmit={event => submitForm(event, props, group, false, updateGroup)}>\n        <input type=\"hidden\" name=\"id\" value={group.uuid} />\n        <FormControl margin=\"normal\" required fullWidth>\n          <InputLabel htmlFor=\"email\">Nome</InputLabel>\n          <Input id=\"name\" name=\"name\" autoFocus\n            value={group.name}\n            onChange={event =>\n              updateGroup({ ...group, name: event.target.value })\n            } />\n        </FormControl>\n        <FormControl margin=\"normal\" required fullWidth>\n          <InputLabel htmlFor=\"priority\">Prioridade</InputLabel>\n          <Input name=\"priority\" type=\"number\" step=\"1\" id=\"priority\"\n            value={group.priority}\n            onChange={event =>\n              updateGroup({ ...group, priority: event.target.value })\n            } />\n        </FormControl>\n        <FormControl margin=\"normal\" required fullWidth>\n          <InputLabel htmlFor=\"categoryType\">Tipo</InputLabel>\n          <Select\n            value={group.categoryType}\n            onChange={event =>\n              updateGroup({ ...group, categoryType: event.target.value })\n            }\n            inputProps={{\n              name: 'categoryType',\n              id: 'categoryType',\n            }}\n          >\n            <MenuItem value={1}>Crédito</MenuItem>\n            <MenuItem value={2}>Débito</MenuItem>\n            <MenuItem value={3}>Tranferência de crédito</MenuItem>\n            <MenuItem value={4}>Tranferência de débito</MenuItem>\n          </Select>\n        </FormControl>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.button}\n        >\n          Salvar\n          </Button>\n        {optionalButton}\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          size=\"small\"\n          className={classes.button}\n          onClick={() => goToList(props)}\n        >\n          Voltar\n          </Button>\n      </form>\n    </>\n  );\n};\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(withStyles(styles)(EditGroup)));\n","import * as actionTypes from './actionTypes';\n\nexport const addGroup = group => {\n  return {\n    type: actionTypes.ADD_GROUP,\n    item: group\n  };\n};\n\nexport const updateGroup = group => {\n  return {\n    type: actionTypes.UPDATE_GROUP,\n    item: group\n  };\n};\n\nexport const deleteGroup = uuid => {\n  return {\n    type: actionTypes.DELETE_GROUP,\n    uuid: uuid\n  };\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Navigation from './screens/navigation/';\nimport ListGroup from './screens/group/listGroup';\nimport EditGroup from './screens/group/editGroup';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n});\n\nconst App = (props) => {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Navigation />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <div className={[styles.MainContainer, 'container'].join(' ')}>\n          <Switch>\n            <Route path=\"/groups/new\" component={EditGroup} />\n            <Route path=\"/groups/edit/:uuid\" exact component={EditGroup} />\n            <Route path=\"/groups\" exact render={() => <ListGroup />} />\n            <Route exact path=\"/\" render={() => <ListGroup />} />\n          </Switch>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  products: [\n    {\n      id: 1,\n      price: 13.5,\n      name: 'keyboard',\n      description: 'A keyboard full of keys',\n      creationDate: Date()\n    },\n    {\n      id: 2,\n      price: 7.75,\n      name: 'mouse',\n      description: 'A mouse with three buttons',\n      creationDate: Date()\n    },\n    {\n      id: 3,\n      price: 700,\n      name: 'laptop',\n      description: 'A laptop with screen and a keyboard',\n      creationDate: Date()\n    },\n    {\n      id: 4,\n      price: 150,\n      name: 'monitor',\n      description: 'A widescreen monitor',\n      creationDate: Date()\n    },\n    {\n      id: 5,\n      price: 120.99,\n      name: 'desk',\n      description: 'A big desk',\n      creationDate: Date()\n    }\n  ]\n};\n\nconst getMaxIdFromState = state => {\n  if (state.products.length === 0){\n    return 0;\n  } \n  return Math.max.apply(Math, state.products.map(p => p.id));\n};\n\nconst addProduct = (state, action) => {\n  const newProductList = [\n    ...state.products,\n    {\n      ...action.product,\n      id: getMaxIdFromState(state) + 1,\n      creationDate: Date()\n    }\n  ];\n  return { products: newProductList };\n};\n\nconst updateProduct = (state, action) => {\n  const newProductList = state.products.map(item => {\n    if (item.id === action.product.id){\n      return { ...action.product, creationDate: item.creationDate };\n    }      \n    return item;\n  });\n  return { products: newProductList };\n};\n\nconst deleteProduct = (state, action) => {\n  const newProductList = state.products.filter(item => action.id !== item.id);\n  return { products: newProductList };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_PRODUCT:\n      return addProduct(state, action);\n    case actionTypes.UPDATE_PRODUCT:\n      return updateProduct(state, action);\n    case actionTypes.DELETE_PRODUCT:\n      return deleteProduct(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  items: [\n    {\n      uuid: 1,\n      priority: 1,\n      name: 'keyboard',\n      type: 1\n    },\n    {\n      uuid: 2,\n      priority: 2,\n      name: 'keyb222oard',\n      type: 2\n    }\n  ]\n};\n\nconst add = (state, action) => {\n  const newList = [\n    ...state.items,\n    {\n      ...action.item,\n      uuid: ((new Date().getTime() * 10000) + 621355968000000000)\n    }\n  ];\n  return { items: newList };\n};\n\nconst update = (state, action) => {\n  const newList = state.items.map(item => {\n    if (item.uuid === action.item.uuid) {\n      return { ...action.item };\n    }\n    return item;\n  });\n  return { items: newList };\n};\n\nconst deleteItem = (state, action) => {\n  const newList = state.items.filter(item => action.uuid !== item.uuid);\n  return { items: newList };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_GROUP:\n      return add(state, action);\n    case actionTypes.UPDATE_GROUP:\n      return update(state, action);\n    case actionTypes.DELETE_GROUP:\n      return deleteItem(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    anchorEl: null,\n    isMenuExpanded: window.innerWidth > 600\n};\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.TOOGLE_MENU:\n            return {\n                anchorEl: null,\n                isMenuExpanded: action.isMenuExpanded\n            };\n        default:\n            return state;\n\n    }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux'\nimport product from './productReducers'\nimport group from './groupReducers'\nimport navigation from './navigationReducers'\n\nexport default combineReducers({\n    product,\n    group,\n    navigation\n})","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport toastr from 'toastr'\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\n\ntoastr.options = {\n    hideDuration: 300,\n    timeOut: 1200,\n    positionClass: 'toast-top-full-width',\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}